{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pstojkov\\\\cernbox\\\\WINDOWS\\\\Desktop\\\\C\\\\Taskify\\\\taskify\\\\src\\\\Components\\\\CreateUser.tsx\",\n  _s = $RefreshSig$();\n// components/CreateUser.tsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateUser = () => {\n  _s();\n  const [userName, setUserName] = useState('');\n  const handleCreate = () => {\n    // Here, you would usually call an API to create the user based on the user name.\n    // You can replace this with real API call when you're ready.\n    console.log(`Creating user: ${userName}`);\n    setUserName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '1rem 0',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userName,\n      onChange: e => setUserName(e.target.value),\n      placeholder: \"Create new user...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreate,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateUser, \"JIezBiY3Im0GvB+UajE6gBj8PwE=\");\n_c = CreateUser;\nexport default CreateUser;\nvar _c;\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateUser","_s","userName","setUserName","handleCreate","console","log","style","margin","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pstojkov/cernbox/WINDOWS/Desktop/C/Taskify/taskify/src/Components/CreateUser.tsx"],"sourcesContent":["// components/CreateUser.tsx\r\nimport React, { useState } from 'react';\r\n\r\nconst CreateUser: React.FC = () => {\r\n  const [userName, setUserName] = useState('');\r\n\r\n  const handleCreate = () => {\r\n    // Here, you would usually call an API to create the user based on the user name.\r\n    // You can replace this with real API call when you're ready.\r\n    console.log(`Creating user: ${userName}`);\r\n    setUserName('');\r\n  };\r\n\r\n  return (\r\n    <div style={{margin: '1rem 0', textAlign: 'center'}}>\r\n      <h2>Create User</h2>\r\n      <input \r\n        type=\"text\" \r\n        value={userName} \r\n        onChange={e => setUserName(e.target.value)} \r\n        placeholder=\"Create new user...\"\r\n      />\r\n      <button onClick={handleCreate}>Create</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateUser;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACAC,OAAO,CAACC,GAAG,CAAE,kBAAiBJ,QAAS,EAAC,CAAC;IACzCC,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACEJ,OAAA;IAAKQ,KAAK,EAAE;MAACC,MAAM,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAClDX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAEC,CAAC,IAAIf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAAoB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFf,OAAA;MAAQsB,OAAO,EAAEjB,YAAa;MAAAM,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAAb,EAAA,CAtBKD,UAAoB;AAAAsB,EAAA,GAApBtB,UAAoB;AAwB1B,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}