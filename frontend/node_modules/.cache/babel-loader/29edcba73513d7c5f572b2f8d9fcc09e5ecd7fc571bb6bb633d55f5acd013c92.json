{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pstojkov\\\\cernbox\\\\WINDOWS\\\\Desktop\\\\C\\\\Taskify\\\\taskify\\\\src\\\\Components\\\\CreateUser.tsx\",\n  _s = $RefreshSig$();\n// components/CreateUser.tsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateUser = () => {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [deviceName, setDeviceName] = useState(''); // new state variable for deviceName\n\n  const handleCreate = async () => {\n    // make handleCreate an async function\n    console.log(`Creating user: ${userName} with device: ${deviceName}`);\n\n    // Make POST request to your backend\n    const response = await fetch('http://localhost:7164/api/User/Add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName,\n        deviceName\n      }),\n      credentials: 'include' // add this line\n    });\n\n    // Check response status\n    if (response.ok) {\n      console.log('User created successfully');\n    } else {\n      console.error('Failed to create user');\n    }\n    setUserName('');\n    setDeviceName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3\",\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        className: \"form-control\",\n        placeholder: \"Create new user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: deviceName,\n        onChange: e => setDeviceName(e.target.value),\n        className: \"form-control mt-2\",\n        placeholder: \"Enter device name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreate,\n          className: \"btn btn-outline-primary\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateUser, \"5TydK/kp2tOCOV0LwPVwaAfmiZ8=\");\n_c = CreateUser;\nexport default CreateUser;\nvar _c;\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateUser","_s","userName","setUserName","deviceName","setDeviceName","handleCreate","console","log","response","fetch","method","headers","body","JSON","stringify","credentials","ok","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pstojkov/cernbox/WINDOWS/Desktop/C/Taskify/taskify/src/Components/CreateUser.tsx"],"sourcesContent":["// components/CreateUser.tsx\r\nimport React, { useState } from 'react';\r\n\r\nconst CreateUser: React.FC = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [deviceName, setDeviceName] = useState(''); // new state variable for deviceName\r\n\r\n  const handleCreate = async () => { // make handleCreate an async function\r\n    console.log(`Creating user: ${userName} with device: ${deviceName}`);\r\n\r\n    // Make POST request to your backend\r\n    const response = await fetch('http://localhost:7164/api/User/Add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ userName, deviceName }), \r\n      credentials: 'include', // add this line\r\n    });\r\n\r\n    // Check response status\r\n    if (response.ok) {\r\n      console.log('User created successfully');\r\n    } else {\r\n      console.error('Failed to create user');\r\n    }\r\n\r\n    setUserName('');\r\n    setDeviceName('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"card p-3\">\r\n      <h2 className=\"mb-3\">Create User</h2>\r\n      <div className=\"input-group\">\r\n        <input \r\n          type=\"text\" \r\n          value={userName} \r\n          onChange={e => setUserName(e.target.value)} \r\n          className=\"form-control\"\r\n          placeholder=\"Create new user...\"\r\n        />\r\n        <input \r\n          type=\"text\" \r\n          value={deviceName} \r\n          onChange={e => setDeviceName(e.target.value)} \r\n          className=\"form-control mt-2\"\r\n          placeholder=\"Enter device name...\"\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <button onClick={handleCreate} className=\"btn btn-outline-primary\">Create</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateUser;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElD,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAAE;IACjCC,OAAO,CAACC,GAAG,CAAE,kBAAiBN,QAAS,iBAAgBE,UAAW,EAAC,CAAC;;IAEpE;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,QAAQ;QAAEE;MAAW,CAAC,CAAC;MAC9CY,WAAW,EAAE,SAAS,CAAE;IAC1B,CAAC,CAAC;;IAEF;IACA,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfV,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,MAAM;MACLD,OAAO,CAACW,KAAK,CAAC,uBAAuB,CAAC;IACxC;IAEAf,WAAW,CAAC,EAAE,CAAC;IACfE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBrB,OAAA;MAAIoB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCzB,OAAA;MAAKoB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BrB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAExB,QAAS;QAChByB,QAAQ,EAAEC,CAAC,IAAIzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC3CP,SAAS,EAAC,cAAc;QACxBW,WAAW,EAAC;MAAoB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFzB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,UAAW;QAClBuB,QAAQ,EAAEC,CAAC,IAAIvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CP,SAAS,EAAC,mBAAmB;QAC7BW,WAAW,EAAC;MAAsB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFzB,OAAA;QAAKoB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjCrB,OAAA;UAAQgC,OAAO,EAAEzB,YAAa;UAACa,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAvB,EAAA,CApDKD,UAAoB;AAAAgC,EAAA,GAApBhC,UAAoB;AAsD1B,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}