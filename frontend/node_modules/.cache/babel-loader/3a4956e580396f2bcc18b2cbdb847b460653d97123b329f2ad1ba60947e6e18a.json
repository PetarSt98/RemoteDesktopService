{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pstojkov\\\\cernbox\\\\WINDOWS\\\\Desktop\\\\C\\\\Taskify\\\\taskify\\\\src\\\\Components\\\\UserSearch.tsx\",\n  _s = $RefreshSig$();\n// components/UserSearch.tsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserSearch = () => {\n  _s();\n  const [userName, setUserName] = useState('');\n  const handleSearch = () => {\n    // Here, you would usually call an API to get the user's devices based on the user name.\n    // You can replace this with real API call when you're ready.\n    console.log(`Searching devices for user: ${userName}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '1rem 0',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userName,\n      onChange: e => setUserName(e.target.value),\n      placeholder: \"Search user...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(UserSearch, \"JIezBiY3Im0GvB+UajE6gBj8PwE=\");\n_c = UserSearch;\nexport default UserSearch;\nvar _c;\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserSearch","_s","userName","setUserName","handleSearch","console","log","style","margin","textAlign","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pstojkov/cernbox/WINDOWS/Desktop/C/Taskify/taskify/src/Components/UserSearch.tsx"],"sourcesContent":["// components/UserSearch.tsx\r\nimport React, { useState } from 'react';\r\n\r\nconst UserSearch: React.FC = () => {\r\n  const [userName, setUserName] = useState('');\r\n\r\n  const handleSearch = () => {\r\n    // Here, you would usually call an API to get the user's devices based on the user name.\r\n    // You can replace this with real API call when you're ready.\r\n    console.log(`Searching devices for user: ${userName}`);\r\n  };\r\n\r\n  return (\r\n    <div style={{margin: '1rem 0', textAlign: 'center'}}>\r\n      <input \r\n        type=\"text\" \r\n        value={userName} \r\n        onChange={e => setUserName(e.target.value)} \r\n        placeholder=\"Search user...\"\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserSearch;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACAC,OAAO,CAACC,GAAG,CAAE,+BAA8BJ,QAAS,EAAC,CAAC;EACxD,CAAC;EAED,oBACEH,OAAA;IAAKQ,KAAK,EAAE;MAACC,MAAM,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAClDX,OAAA;MACEY,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,QAAS;MAChBW,QAAQ,EAAEC,CAAC,IAAIX,WAAW,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFrB,OAAA;MAAQsB,OAAO,EAAEjB,YAAa;MAAAM,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAAnB,EAAA,CApBKD,UAAoB;AAAAsB,EAAA,GAApBtB,UAAoB;AAsB1B,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}