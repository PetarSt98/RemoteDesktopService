{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pstojkov\\\\cernbox\\\\WINDOWS\\\\Desktop\\\\C\\\\Taskify\\\\taskify\\\\src\\\\Components\\\\DeviceList.tsx\";\n// components/DeviceList.tsx\nimport React from 'react';\n\n// Replace with real data type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst devices = []; // Assume this data comes from your API\n\nconst DeviceList = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '1rem 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), devices.length > 0 ? devices.map(device => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: device.name\n    }, device.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No devices found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = DeviceList;\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","devices","DeviceList","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","device","name","id","_c","$RefreshReg$"],"sources":["C:/Users/pstojkov/cernbox/WINDOWS/Desktop/C/Taskify/taskify/src/Components/DeviceList.tsx"],"sourcesContent":["// components/DeviceList.tsx\r\nimport React from 'react';\r\n\r\n// Replace with real data type\r\ntype Device = {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst devices: Device[] = []; // Assume this data comes from your API\r\n\r\nconst DeviceList: React.FC = () => {\r\n  return (\r\n    <div style={{margin: '1rem 0'}}>\r\n      <h2>User Devices</h2>\r\n      {devices.length > 0 ? devices.map(device => (\r\n        <p key={device.id}>{device.name}</p>\r\n      )) : <p>No devices found.</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeviceList;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,OAAiB,GAAG,EAAE,CAAC,CAAC;;AAE9B,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EACjC,oBACEF,OAAA;IAAKG,KAAK,EAAE;MAACC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC7BL,OAAA;MAAAK,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBR,OAAO,CAACS,MAAM,GAAG,CAAC,GAAGT,OAAO,CAACU,GAAG,CAACC,MAAM,iBACtCZ,OAAA;MAAAK,QAAA,EAAoBO,MAAM,CAACC;IAAI,GAAvBD,MAAM,CAACE,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CACpC,CAAC,gBAAGT,OAAA;MAAAK,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAAAM,EAAA,GATKb,UAAoB;AAW1B,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}